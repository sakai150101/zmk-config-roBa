#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R        &kp T                                           &kp Y          &kp U  &kp I      &kp O    &kp P
&kp A      &kp S         &kp D         &kp F        &kp G            &kp ESCAPE          &kp TAB    &kp H          &kp J  &kp K      &kp L    &kp MINUS
&kp Z      &kp X         &mt LC(C) C   &mt LC(V) V  &kp B            &kp LEFT_SHIFT      &kp COLON  &kp N          &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 SPACE  &lt 2 LC(SPACE)  &kp LG(SPACE)       &kp ENTER  &kp BACKSPACE                             &kp LS(LG(S))
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN>;
        };

        FUNCTION {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp SQT   &kp DOLLAR  &kp PERCENT                                   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE       &kp LCTRL         &kp PIPE
&kp HASH         &kp ASTERISK       &none     &none       &none        &kp TAB             &kp AT_SIGN  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp EQUAL
&kp UP_ARROW     &kp DOWN           &kp LEFT  &kp RIGHT   &none        &kp UNDERSCORE      &kp SEMI     &kp PLUS              &kp MINUS              &kp LESS_THAN   &kp GREATER_THAN  &kp QUESTION
&none            &none              &trans    &trans      &trans       &trans              &trans       &trans                                                                         &none
            >;

            sensor-bindings = <&inc_dec_kp LC(PLUS) LC(MINUS)>;
        };

        NUM {
            bindings = <
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4                          &none   &none         &none         &none         &none
&kp N5  &kp N6  &kp N7  &kp N8  &kp N9  &kp ESCAPE      &none   &none   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
&none   &none   &none   &none   &none   &none           &trans  &none   &none         &none         &none         &ext_power EP_ON
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans                                            &bt BT_CLR
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans     &trans                         &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans      &trans  &trans  &none   &none   &none   &trans
&trans  &trans  &trans  &trans     &trans     &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &mkp LCLK  &mkp RCLK  &trans      &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        english {
            bindings = <
&kp Q      &kp W          &kp E   &kp R   &kp T                                    &kp Y   &kp U  &kp I   &kp O   &kp P
&kp A      &kp S          &kp D   &kp F   &kp G   &mkp MCLK           &trans       &kp H   &kp J  &kp K   &kp L   &trans
&kp Z      &kp X          &kp C   &kp V   &kp B   &kp LEFT_SHIFT      &bootloader  &kp N   &kp M  &trans  &trans  &none
&kp CARET  &kp LEFT_META  &trans  &trans  &trans  &trans              &trans       &trans                         &none
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };
    };
};
